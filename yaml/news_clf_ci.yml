resources:
  containers:
  - container: mlops
    image: andysong199086/news_clf:3.0

pr: none
trigger:
  branches:
    include:
    - main

variables:
  - template: env_template.yml
  - group: devops-vg

pool:
  vmImage: ubuntu-latest

stages:
- stage: 'Model_CI'
  displayName: 'Model CI'
  jobs:
  - job: 'create_corpus'
    displayName: 'Creating Corpus'
    container: mlops
    timeoutInMinutes: 0
    steps:
    - task: AzureCLI@1
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)
        inlineScript: |
          set -e
          echo 'creating corpus'
          if [ ! -f 'News_Category_Dataset_v2.json' ];then
            echo 'manully download the data and unzip it first!'
          fi
          python py/build_corpus.py --corpus News_Category_Dataset_v2.json > corpus.txt
          wc -l corpus.txt
          head -n 5 corpus.txt
          python py/preprocessing.py --corpus corpus.txt > corpus_clean.txt
          python py/train_test_split.py --corpus corpus_clean.txt --train_ratio $(TRAIN_RATIO)
          wc -l corpus_train.txt corpus_eval.txt
          awk -F '\t' '{print tolower($2)}' corpus_train.txt > corpus_train_text.txt
          wc -l corpus_train_text.txt
#          if [ ! -d 'fastText' ];then
#            git clone https://github.com/facebookresearch/fastText.git
#            cd fastText
#            pip install .
#            cd ..
#          fi
          python py/build_vocab.py --tokenizer 'treebank' --max_seq_len 1024 \
          --input corpus_train_text.txt --corpus corpus_train.txt --vocab vocab_train.pkl \
          --min_freq 3 --mode $(MODEL_MODE) --lower --pretrained_vectors
          vec_file=$(MODEL_MODE)'_vec.txt'
          if [ ! -f vec_file ] or [ ! -f 'vocab_train.pkl' ];then
            echo 'vec file not produced'
            exit 1
          else
            echo 'vec file found'
          fi
